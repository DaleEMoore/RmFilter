Remove Filter
Delete files according to some filter.

Overview
LucysCakeShop.Com needs it's over 1 week old logs removed.
# Command lines
#   Luter at Lucy's Cake Shop is "./rmFilter.py  -folder logs -rm"
#   Ron at LFI wants to keep EOM, EOQ, EOW and dailys for 10 days.


TODO
Pick just one mode to run unittest in successfully and fix rmFilter then go back and fix all modes.
	PyCharm Run.
		menu, run, Unittests in tests.
		Could run "Unittests in TestSTringMethods" or "Unittests in tests(1)"
		"Unittests in TestSTringMethods" uses Class TestStringMethods in tests.py and might be more Pythonic.
			Appears to be the same as:
dalem@Mercury:~/PycharmProjects/RmFilter⟫ /usr/bin/python3.4 /home/dalem/Downloads/pycharm-community-2016.1.4/helpers/pycharm/utrunner.py /home/dalem/PycharmProjects/RmFilter/tests.py::TestStringMethods true

##teamcity[enteredTheMatrix]

##teamcity[testCount count='1']
setUp before Class tests.py
Create testFolder1. tests.py
Create testFolder1/d1. tests.py
Create testFolder1/d2. tests.py
Create testFolder1/d3. tests.py

Test running rmFilter against the folders that have been setup. tests.py
usage: utrunner.py [-h] [-folder FOLDER [FOLDER ...]] [-rm] [-keepfriday]
utrunner.py: error: unrecognized arguments: /home/dalem/PycharmProjects/RmFilter/tests.py::TestStringMethods true

##teamcity[testSuiteStarted name='tests.TestStringMethods' locationHint='python_uttestid:///home/dalem/PycharmProjects/RmFilter/tests.TestStringMethods']

##teamcity[testStarted name='test_rmFilter' locationHint='python_uttestid:///home/dalem/PycharmProjects/RmFilter/tests.TestStringMethods.test_rmFilter']

##teamcity[testFailed name='test_rmFilter' error='true' message='Error' details='Traceback (most recent call last):|n  File "/home/dalem/PycharmProjects/RmFilter/tests.py", line 125, in test_rmFilter|n    args = parser2.parse_args()|n  File "/usr/lib/python3.4/argparse.py", line 1740, in parse_args|n    self.error(msg % |' |'.join(argv))|n  File "/usr/lib/python3.4/argparse.py", line 2395, in error|n    self.exit(2, _(|'%(prog)s: error: %(message)s\n|') % args)|n  File "/usr/lib/python3.4/argparse.py", line 2382, in exit|n    _sys.exit(status)|nSystemExit: 2|n']
##teamcity[testFinished name='test_rmFilter' duration='2']
tearDown after Class tests.py
Delete all files and folders under testFolder1. tests.py
whatHappened from Delete:None tests.py

##teamcity[testSuiteFinished name='tests.TestStringMethods']


		"Unittests in tests(1)" uses tests.py as a script and might not be as Pythonic.
	Code. (How is this different from Command line?)
		dalem@QnD:~/PycharmProjects/RmFilter$ ./argParseAndUnitTest1.py some_file.txt
	Command line.
		dalem@QnD:~/PycharmProjects/RmFilter⟫ python3 tests.py

	I'm not running it right! When I run tests.py!TestStringMethods in PyCharm I'm running utrunner.py first.
	When I run argParseAndUnitTest1.py it's as a script and I'm running from python command line.
	Run tests.py!TestStringMethods from command line as argParseAndUnitTest1.py.
	Could I get it running in PyCharm with utrunner.py?
	I could learn a lot from understanding

dalem@Mercury:~/PycharmProjects/RmFilter⟫ /usr/bin/python3.4 /home/dalem/Downloads/pycharm-community-2016.1.4/helpers/pycharm/utrunner.py /home/dalem/PycharmProjects/RmFilter/tests.py::TestStringMethods true

less /home/dalem/Downloads/pycharm-community-2016.1.4/helpers/pycharm/utrunner.py



Fix this file's vi indentation tab.
	Turn on vi's :set auto-execute.


Create valid unit tests for
    Lucy's Cake Shop
    LFI

Allow run rmFilter in selected folders FLAT, not descending into sub-folders.

Run tests before submitting to git central repository and avoid push if tests fail?

For LFI a smarter remove filter (rmFilter), removing recent files.
    Ron at LFI wants to keep EOM, EOQ, EOW and dailys for 10 days.
    Keep Everyday for the last month.
    Keep Every Friday for the last quarter.
    Keep The first day of every month for the last 2 years.
    rmFilter is a separate project in PycharmProjects.
    https://github.com/DaleEMoore/RmFilter

Add an option to parse file names and folders by a Regular Expression (RE)
    like grep.

Add an option for folder mode scanning only the top-level-folders within the
    target folder and ignoring everything underneath.


Logs
Wednesday 4 February 2015 9:28 AM CST
Created


Thursday 5 February 2015 6:29 AM CST
Delete files in a command line specified folder that are older than 1 week.

Hi Mike;

ssh root@mlconsultsrv.com
pushd /var/www/lucycakeshop.com/web
root@g157:/var/www/lucycakeshop.com/web#  ./rmFilter.py  -folder logs

This command line (./rmFilter.py  -folder logs) will just display what files match the filter to be removed. To actually remove the files you have to add the "-rm" option to the command line.

I hope this is helpful,
Dale


Thu Apr 30 11:12:54 CDT 2015
This seems impossible to me!
At Bubbles.MW the PyCharm version of main.py and the gvim-ed version did not match.
The gvim-ed version was newer.
I copied the gvim version into the PyCharm version.


Fri 5 Jun 2016 7:50 AM CST
How am I going to TEST this?
    Build TEST system relying on python testing facilities.
    Learn Python testing, unittest, pytest, ... What's the best/right thing to do?

    I can't build folders and files with appropriate date of creation (Friday, EOM, ...)
    using mkdir on any OS. Instead should I use date of modification?
    http://stackoverflow.com/questions/237079/how-to-get-file-creation-modification-date-times-in-python

    Can I have a program mode -SetupTEST which builds
    the TEST data? Can I have a program mode -RunTEST which executes the test
    against TEST data?
    Does the TESTdata folder start in / or \?
    folder TESTdata with some files and
        folder TESTfolder1 Friday with files and folders
        folder TESTfolder2 EOM with files and folders
    run test keepFriday, keepEOM.

    http://docs.python-guide.org/en/latest/writing/tests/
        Run tests automatically and notify DaleEMoore@gMail.Com of the test results.
        Run all tests before pushing code to the central repository.

    Test runner in PyCharm fails with:
    usage: utrunner.py [-h] [-folder FOLDER [FOLDER ...]] [-rm] [-keepfriday]
    utrunner.py: error: unrecognized arguments: /home/dalem/PycharmProjects/RmFilter/tests.py true

    at main.py line 38
        args = parser.parse_args()

    Somebody has a similar problem here:
    http://stackoverflow.com/questions/24397258/can-not-run-nosetests-when-i-use-argparse-in-my-python-code
    It seems I should split main.py!main() parser code into something that only runs if __name__ == "__main__".
    That code should parse into the same fields that would be setup from test.py!test_rmFilter()
    1) Convert main.py to split parser code into
        if __name__ == "__main__" section
        and save argparse results
    2) Change test.py to create argparse results like item 1, above.
    split parser code so it's not run twice when testing and load fields so main and test get the same results.
    Like: http://stackoverflow.com/questions/24397258/can-not-run-nosetests-when-i-use-argparse-in-my-python-code

Build a small example of my UnitTest2 problems.
    Running tests via pyCharm and unit2 I get errors; as pyCharm:
        /usr/bin/python3m /home/dalem/Downloads/pycharm-community-4.5.1/helpers/pycharm/utrunner.py /home/dalem/PycharmProjects/RmFilter/tests.py::TestStringMethods::test_rmFilter "--folder ." true
        Testing started at 7:44 AM ...
        setUp before Class tests.py
        Create testFolder1. tests.py
        Create testFolder1/d1. tests.py
        Create testFolder1/d2. tests.py
        Create testFolder1/d3. tests.py

        Test running rmFilter against the folders that have been setup. tests.py
        Remove files created last week or before:2015-05-28 07:44:55.009883. main.py
        usage: utrunner.py [-h] [--folder FOLDER [FOLDER ...]] [-rm] [--keepfriday]
        utrunner.py: error: unrecognized arguments: /home/dalem/PycharmProjects/RmFilter/tests.py::TestStringMethods::test_rmFilter --folder . true
        tearDown after Class tests.py
        Delete all files and folders under testFolder1. tests.py
        whatHappened from Delete:None tests.py

        Process finished with exit code 0

        Error
        Traceback (most recent call last):
          File "/home/dalem/PycharmProjects/RmFilter/tests.py", line 110, in test_rmFilter
            main.main(parser2, argv2)
          File "/home/dalem/PycharmProjects/RmFilter/main.py", line 27, in main
            args = parser2.parse_args()
          File "/usr/lib/python3.4/argparse.py", line 1729, in parse_args
            self.error(msg % ' '.join(argv))
          File "/usr/lib/python3.4/argparse.py", line 2384, in error
            self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
          File "/usr/lib/python3.4/argparse.py", line 2371, in exit
            _sys.exit(status)
        SystemExit: 2
    As unit2:
        dalem@QnD:~/PycharmProjects/RmFilter⟫ unit2
        setUp before Class tests.py
        Create testFolder1. tests.py
        Create testFolder1/d1. tests.py
        Create testFolder1/d2. tests.py
        Create testFolder1/d3. tests.py

        Test running rmFilter against the folders that have been setup. tests.py
        Remove files created last week or before:2015-05-28 07:48:45.945814. main.py
        Display filtered files, do NOT remove. main.py
        ERROR: No folders on command line! main.py
        usage: unit2 [-h] [--folder FOLDER [FOLDER ...]] [-rm] [--keepfriday]

        Remove files and folders from a folder defined by a filter.

        optional arguments:
          -h, --help            show this help message and exit
          --folder FOLDER [FOLDER ...]
                                the folder to remove files and folders from.
          -rm                   remove the files, otherwise just display.
          --keepfriday          keep files and folders created on Fridays.
        .tearDown after Class tests.py
        Delete all files and folders under testFolder1. tests.py
        whatHappened from Delete:None tests.py

        ----------------------------------------------------------------------
        Ran 1 test in 0.009s

        OK
    http://stackoverflow.com/questions/1029891/python-unittest-is-there-a-way-to-pass-command-line-options-to-the-app


Split up code to, perhaps, fix the UnitTest2 problems
    Make main.py a small chunk of code that processes the command line then calls a second routine that
    does the actual-processing. This way I can test the actual-processing without worrying about the interference
    caused by argparse.
    main.py can continue to be the argparse processor.
    What is the name of the new actual-processing file? rmFilter.py?

    Or could I "import argparse as ap2"?
    Or could I "from argparse import ArgumentParser as ap2"?

    "from argparse import ArgumentParser as ap2" seems to be the answer!
    from argparse import ArgumentParser as ArgumentParser2
    Wouldn't it have been better for unitTest2 to do that?


Sat Jun  4 11:33:01 CDT 2016
Start fixing argparse and unittest working together problem.

Using "from argparse import ArgumentParser as ArgumentParser2"
    Not split; used "from argparse import ArgumentParser as ArgumentParser2"

    running unittests in PyCharm gets this:
        usage: utrunner.py [-h] [--folder FOLDER [FOLDER ...]] [-rm] [--keepfriday]
        utrunner.py: error: unrecognized arguments: /home/dalem/PycharmProjects/RmFilter/tests.py true
    and running unit2 has problems with rmFolder's arguments.
    How can I run unit2 and pass arguments down?
    Or should I go back to splitting the code into main.py which does the argparse and rmFilter.py which
    does the actual-processing?

    setup DEV, unit2, unitTest2, PyCharm unittest-ing, TEST, and LIVE
    processing methodologies.

    # It MIGHT be unreasonable to use argparse and unittest2!

    This MIGHT be the answer:
    http://stackoverflow.com/questions/20265522/argparse-and-unittest-python

    use:

        runner = unittest.TextTestRunner()
        itersuite = unittest.TestLoader().loadTestsFromTestCase(MyTestClass)
        runner.run(itersuite)

    instead of:

        unittest.main()
    Nope, some other complications. Perhaps it's my dirty code.

    This: http://dustinrcollins.com/testing-python-command-line-apps is an example of something that really works.
    This: http://dustinrcollins.com/testing-python-command-line-apps is an example of something that really works.
    This: http://dustinrcollins.com/testing-python-command-line-apps is an example of something that really works.

    Or these
    http://stackoverflow.com/questions/18160078/how-do-you-write-tests-for-the-argparse-portion-of-a-python-module
    https://www.reddit.com/r/Python/comments/r9o2i/using_nose_and_argparse/
    might cover my issues.

    Calling an external command in Python
    http://stackoverflow.com/questions/89228/calling-an-external-command-in-python

    Avoid using argparse when running TEST.
        Figure out if I'm running TEST and avoid argparse when in TEST mode.
        Pull the argparse stuff out to be easily avoided so I can still run the key pieces of code
        when in TEST mode. Call the procedures explicitly.
    Key code must be separated from argparse invocation.
    I said this before, but; this is what I should be doing:
        In the middle of spliting main.py into rmFilter.py and main.py;
        and using "from argparse import ArgumentParser as ArgumentParser2".

    Using examples from http://dustinrcollins.com/testing-python-command-line-apps I want to
    move my rmFilter argparse into a class and reference it there. Then I can run unittest2
    without rmFilter argparse and unittest2 argparse impacting each other.

argparse and unittest don't work well together.
Figure out how to make argparse and unittest work together and finish rmfilter for Ron Locke at LFI.


Monday 6 June 2016 6:59 AM CST
    argParseAndUnitTest2.py
    trys this one http://stackoverflow.com/questions/20265522/argparse-and-unittest-python might work too.
    Error: this constructor takes no arguments; use argParseAndUnitTest1.py to fix the rmFilter problems.



Wed Jun 15 08:53:20 CDT 2016
figure out how to make argparse and unittest work well together.
    Figure out how to make argparse and unittest work together and finish rmfilter for Ron Locke at LFI.
    Look at argParseAndUnitTest1.py
    I think the answer to this
    http://stackoverflow.com/questions/1029891/python-unittest-is-there-a-way-to-pass-command-line-options-to-the-app
    will work fine.

    run unittest2 from code and from command line and from PyCharm and validate argParseAndUnitTest1.py functions.
    PyCharm Run:
        /usr/bin/python3m /home/dalem/PycharmProjects/RmFilter/argParseAndUnitTest1.py
        usage: argParseAndUnitTest1.py [-h] [--input INPUT]
                                       filename [unittest_args [unittest_args ...]]
        argParseAndUnitTest1.py: error: the following arguments are required: filename, unittest_args
        Add paramater some_file.txt and re-run.
        /usr/bin/python3m /home/dalem/PycharmProjects/RmFilter/argParseAndUnitTest1.py some_file.txt

        ----------------------------------------------------------------------
        Ran 0 tests in 0.000s

        OK
        How do I run unittest from PyCharm? In the Project View, right-click tests.py,
        run Unittests in tests.
            /usr/bin/python3.4 /home/dalem/Downloads/pycharm-community-2016.1.4/helpers/pycharm/utrunner.py /home/dalem/PycharmProjects/RmFilter/tests.py true
            Testing started at 6:18 PM ...
            usage: utrunner.py [-h] [-folder FOLDER [FOLDER ...]] [-rm] [-keepfriday]
            utrunner.py: error: unrecognized arguments: /home/dalem/PycharmProjects/RmFilter/tests.py true
            setUp before Class tests.py
            Create testFolder1. tests.py
            Create testFolder1/d1. tests.py
            Create testFolder1/d2. tests.py
            Create testFolder1/d3. tests.py

            Test running rmFilter against the folders that have been setup. tests.py

            Error
            Traceback (most recent call last):
              File "/home/dalem/PycharmProjects/RmFilter/tests.py", line 122, in test_rmFilter
                args = parser2.parse_args()
              File "/usr/lib/python3.4/argparse.py", line 1740, in parse_args
                self.error(msg % ' '.join(argv))
              File "/usr/lib/python3.4/argparse.py", line 2395, in error
                self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
              File "/usr/lib/python3.4/argparse.py", line 2382, in exit
                _sys.exit(status)
            SystemExit: 2

            tearDown after Class tests.py
            Delete all files and folders under testFolder1. tests.py
            whatHappened from Delete:None tests.py

            Process finished with exit code 0
        How do I look at unittest results in PyCharm?
            View, Tool Windows, Run; will show the TestRunner objects.
            See
            https://www.jetbrains.com/help/pycharm/2016.1/viewing-and-exploring-test-results.html
            https://www.jetbrains.com/help/pycharm/2016.1/test-runner-tab.html#testingToolbar
            They are a Menu, Run, Configuration: Unittests in tests(1). Results are:
/usr/bin/python3m /home/dalem/Downloads/pycharm-community-2016.1.4/helpers/pycharm/utrunner.py /home/dalem/PycharmProjects/RmFilter/tests.py true
Testing started at 9:51 AM ...

usage: utrunner.py [-h] [-folder FOLDER [FOLDER ...]] [-rm] [-keepfriday]
utrunner.py: error: unrecognized arguments: /home/dalem/PycharmProjects/RmFilter/tests.py true
setUp before Class tests.py
Create testFolder1. tests.py
Create testFolder1/d1. tests.py
Create testFolder1/d2. tests.py
Create testFolder1/d3. tests.py

Test running rmFilter against the folders that have been setup. tests.py

Error
Traceback (most recent call last):
  File "/home/dalem/PycharmProjects/RmFilter/tests.py", line 122, in test_rmFilter
    args = parser2.parse_args()
  File "/usr/lib/python3.5/argparse.py", line 1738, in parse_args
    self.error(msg % ' '.join(argv))
  File "/usr/lib/python3.5/argparse.py", line 2394, in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
  File "/usr/lib/python3.5/argparse.py", line 2381, in exit
    _sys.exit(status)
SystemExit: 2

tearDown after Class tests.py
Delete all files and folders under testFolder1. tests.py
whatHappened from Delete:None tests.py

Process finished with exit code 0
             Fix this!
    code
        dalem@QnD:~/PycharmProjects/RmFilter$ ./argParseAndUnitTest1.py some_file.txt

        ----------------------------------------------------------------------
        Ran 0 tests in 0.000s

        OK
    command line:
        How do I run unittest from command line?
        It appears that "./tests.py" should run, but; I get
dalem@QnD:~/PycharmProjects/RmFilter⟫ ./tests.py
./tests.py: line 1: __author__: command not found
./tests.py: line 14: theDir: command not found
./tests.py: line 15: theProgram: command not found
./tests.py: line 23: syntax error near unexpected token `('
./tests.py: line 23: `def createFolder(folderName, timeMod=time.time()):'
        But this runs better:
dalem@QnD:~/PycharmProjects/RmFilter⟫ python3 tests.py
Script name=main.
setUp before Class tests.py
Create testFolder1. tests.py
Create testFolder1/d1. tests.py
Create testFolder1/d2. tests.py
Create testFolder1/d3. tests.py

Test running rmFilter against the folders that have been setup. tests.py
Display filtered files, do NOT remove. tests.py
Remove files created last week or before:2016-06-07 10:07:26.545912. tests.py
EtearDown after Class tests.py
Delete all files and folders under testFolder1. tests.py
whatHappened from Delete:None tests.py

======================================================================
ERROR: test_rmFilter (__main__.TestStringMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "tests.py", line 137, in test_rmFilter
    rmFilter.main(parser2, sys.argv, args, lastWeek, rmDsp)
  File "/home/dalem/PycharmProjects/RmFilter/rmFilter.py", line 12, in main
    for s1 in args.folder:
TypeError: 'NoneType' object is not iterable

----------------------------------------------------------------------
Ran 1 test in 0.044s

FAILED (errors=1)
Done tests.py

